<!-- page.custom-collection.liquid -->
{% assign collection_handle = section.settings.collection_handle %}
{% assign collection = collections[collection_handle] %}

{% if collection %}
  <div class="collection-products">
    {% for product in collection.products %}
      <div class="product">
        <h2>{{ product.title }}</h2>
        <div class="product-image">
          <img
            width="200"
            height="200"
            src="{{ product.featured_image | img_url: 'medium' }}"
            alt="{{ product.title }}"
          >
        </div>
        <div class="product-price">
          {{ product.price | money }}
        </div>
        <div class="product-description">
          {{ product.description }}
        </div>
        -
        <form class="add-to-cart-form" data-product-id="{{ product.variants.first.id }}">
          <input type="hidden" name="id" value="{{ product.variants.first.id }}">
          <button type="submit">Add to Cart</button>
        </form>
      </div>
    {% endfor %}
  </div>
  <div id="error-modal" class="modal">
    <div class="modal-content">
      <span class="close-button">&times;</span>
      <p id="modal-error-message"></p>
    </div>
  </div>
{% else %}
  <p>No products found in this collection.</p>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var freeProductID;

    // Function to get the product ID by title
    function getProductIDByTitle(title) {
      return fetch('/products.json')
        .then((response) => response.json())
        .then((data) => {
          const product = data.products.find((p) => p.title === title);
          if (product) {
            return product.variants[0].id;
          } else {
            throw new Error('Product not found');
          }
        });
    }

    // Initialize the free product ID
    getProductIDByTitle('Camisa SMG + Lunch Box')
      .then((freePID) => {
        freeProductID = freePID;
      })
      .catch((error) => {
        console.error('Error fetching free product ID:', error);
      });

    document.querySelectorAll('.add-to-cart-form').forEach((form) => {
      form.addEventListener('submit', function (event) {
        event.preventDefault();

        const productId = this.querySelector('input[name="id"]').value;
        const modal = document.getElementById('error-modal');
        const modalMessage = document.getElementById('modal-error-message');
        const closeButton = document.querySelector('.close-button');

        fetch('/cart.js')
          .then((response) => response.json())
          .then((cart) => {
            if (cart.items.length > 0) {
              modalMessage.textContent = 'Solo puedes seleccionar un producto';
              modal.style.display = 'block';
            } else {
              fetch(window.Shopify.routes.root + 'cart/add.js', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  Accept: 'application/json',
                },
                body: JSON.stringify({
                  items: [
                    { id: productId, quantity: 1 },
                    { id: freeProductID, quantity: 1 },
                  ],
                }),
              })
                .then((response) => response.json())
                .then((data) => {
                  window.location.href = '/cart'; // Redirect to cart
                })
                .catch((error) => {
                  console.error('Error:', error);
                  modalMessage.textContent = 'Hubo un error al agregar el producto al carrito';
                  modal.style.display = 'block';
                });
            }
          })
          .catch((error) => {
            console.error('Error:', error);
            modalMessage.textContent = 'Hubo un error al verificar el carrito';
            modal.style.display = 'block';
          });

        closeButton.addEventListener('click', () => {
          modal.style.display = 'none';
        });

        window.addEventListener('click', (event) => {
          if (event.target === modal) {
            modal.style.display = 'none';
          }
        });
      });
    });
  });
</script>

{% schema %}
{
  "name": "sbh collection",
  "settings": [
    {
      "type": "text",
      "id": "collection_handle",
      "label": "Collection Handle",
      "default": "servicios-de-desarrollo-por-horas"
    }
  ],
  "presets": [
    {
      "name": "sbh collection"
    }
  ]
}
{% endschema %}
